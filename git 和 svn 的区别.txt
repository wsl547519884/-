GIT和SVN的区别

1. Cit是分布式，而SVN不是分布式
2. 存储内容的时候，Git按元数据方式存储，而SVN是按文件
3. Git没有一个全局版本号，SVN有，目前为止这是SVN相比Git缺少的最大的一个特征
4. Git的内容完整性要优于SVN：Git的内容存储使用的是SHA-1哈希算法。这能确保代码的完整性，确保在遇到磁盘故障和网络问题的时候降低对版本库的破坏
5. Git下载下来后，在offline状态下可以看到所有的Log，SVN不可以
6. SNV必须先Update才能Commit，忘记合并时就会出现一些错误Git还是比较少的出现这种情况
7. 克隆一份全新的目录以同样拥有五个分支来说，SVN是同时赋值5个版本的文件，也就是说重复五次同样的动作。而Git知识获取文件的每个版本的元素，然后只载入主要的分支（master）在我的经验，克隆一个拥有将近一万个提交（commit），五个分支，每个分支大约有1500个文件的SVN，耗了将近一个小时！而Git只用了区区的1分钟
8. 版本库（repository）：SVN只能有一个指定中央版本库。当这个中央版本库有问题时，所有工作成员都瘫痪直到版本库维修完毕或者新的版本库设立完成。而Git可以有无限个版本库。或者，更正确的说法，每一个Git都有一个版本库，区别是他们是否拥有活跃目录（Git  Working  Tree）。如果主要版本库（例如：设置GitHub的版本库）发生了什么事，工作成员依然可以在自己的本地版本库（local  repository）提交，等待主要版本库恢复即可。工作成员也可以提交到其他版本库。
9. 分支（Branch）在SVN中，分支是一个完整的目录。且这个目录拥有完整的实际文件。如果工作人员想要开启新的分支，那将会影响“全世界”！每个人都会拥有和你一样的分支。如果你对分支是用来破坏工作（安检测试），那将会想传染病一样，你改一个分支，还得让其他人重新切分支重新下载。而Git，每个工作成员可以任意在自己的本地版本库开启无限个分支。eg：当我想尝试破坏自己的程序（安检测试），并且想保留这些被修改的文件供日后使用，我可以开一个分支，做我喜欢的事。完全不需要担心妨碍其他成员的 工作。只要我不合并以及提交到主要版本库，没有一个成员会被影响。等到我不需要这个分支时，我只要把它从我本地版本库删除即可。Git的分支名是可以使用不同的名字的。eg：我的本地分支名为OK，而在主要版本库的名字其实是master。最值得一提的是，我可以在Git的任意一个提交点（commit point）开启分享！（其中一个方法就是使用gitk-all可观察整个提交记录，然后在任意点开启分支。）
10. 提交（commit）在SVN中，当你提交你的完成品时，它将直接记录到中央版本库。当你发现你的完成作品存在严重问题时，你已经无法阻止事情的发生了。如果网路中断，你根本没办法提交！而Git提交完全属于本地版本库的活动。而你只需“推”（Git  push）到主要版本库即可。Git的“推”其实是在执行“同步”（Synchronize）